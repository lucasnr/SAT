DROP DATABASE IF EXISTS SAT;
CREATE DATABASE SAT;
USE SAT;

CREATE TABLE ENDERECO (
	ID INT PRIMARY KEY AUTO_INCREMENT,
    CEP CHAR(9) NOT NULL,
    BAIRRO VARCHAR(200) NOT NULL,
    LOGRADOURO VARCHAR(200) NOT NULL,
    NUMERO VARCHAR(20) NOT NULL,
    
    UNIQUE INDEX(BAIRRO, LOGRADOURO, NUMERO)
);

CREATE TABLE PESSOA (
	ID INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(200) NOT NULL,
    CPF CHAR(14) NOT NULL UNIQUE,
    RG CHAR(11) NOT NULL UNIQUE,
    DATA_NASCIMENTO DATE NOT NULL,
    DATA_CADASTRO DATETIME NOT NULL DEFAULT NOW(),
    SEXO ENUM('MASCULINO', 'FEMININO'),
    ENDERECO_ID INT,
    
    FOREIGN KEY(ENDERECO_ID) REFERENCES ENDERECO(ID)
		ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE CONTATO (
	PESSOA_ID INT NOT NULL PRIMARY KEY,
    EMAIL VARCHAR(200) NOT NULL UNIQUE,
    TELEFONE VARCHAR(25) NOT NULL,
  
	FOREIGN KEY(PESSOA_ID) REFERENCES PESSOA(ID)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE UNIDADE (
	ID INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(200) NOT NULL UNIQUE,
    QUANTIDADE_EQUIPAMENTOS INT NOT NULL,
    ENDERECO_ID INT NOT NULL,
    
    FOREIGN KEY(ENDERECO_ID) REFERENCES ENDERECO(ID)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE USUARIO (
	ID INT PRIMARY KEY AUTO_INCREMENT,
    MATRICULA VARCHAR(50) NOT NULL UNIQUE,
    SENHA VARCHAR(100) NOT NULL,
    PESSOA_ID INT NOT NULL,
    
    FOREIGN KEY(PESSOA_ID) REFERENCES PESSOA(ID)
		ON DELETE CASCADE ON UPDATE CASCADE
    #CHECK (LENGTH(SENHA) >= 8)
);

CREATE TABLE COORDENADOR (
    USUARIO_ID INT PRIMARY KEY,
    
    FOREIGN KEY(USUARIO_ID) REFERENCES USUARIO(ID)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE COORDENADOR_UNIDADE (
	COORDENADOR_ID INT PRIMARY KEY,
    UNIDADE_ID INT NOT NULL UNIQUE,
    
    FOREIGN KEY(COORDENADOR_ID) REFERENCES COORDENADOR(USUARIO_ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY(UNIDADE_ID) REFERENCES UNIDADE(ID)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE COORDENADOR_GERAL (
	COORDENADOR_ID INT PRIMARY KEY,
    
    FOREIGN KEY(COORDENADOR_ID) REFERENCES COORDENADOR(USUARIO_ID)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE INSTRUTOR (
	ID INT PRIMARY KEY AUTO_INCREMENT,
    USUARIO_ID INT NOT NULL,
    
    FOREIGN KEY(USUARIO_ID) REFERENCES USUARIO(ID)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE TURMA (
	ID INT PRIMARY KEY AUTO_INCREMENT,
    CODIGO VARCHAR(50) NOT NULL UNIQUE,
    DATA_INICIO DATE NOT NULL,
    DATA_FIM DATE NOT NULL,
    TURNO ENUM('MATUTINO', 'VESPERTINO', 'NOTURNO') NOT NULL,
    INSTRUTOR_ID INT NOT NULL,
    UNIDADE_ID INT NOT NULL,
    
    FOREIGN KEY(INSTRUTOR_ID) REFERENCES INSTRUTOR(ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY(UNIDADE_ID) REFERENCES UNIDADE(ID)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE MODULO (
	ID INT PRIMARY KEY AUTO_INCREMENT,
    TITULO VARCHAR(200) NOT NULL UNIQUE,
    DESCRICAO TEXT NOT NULL
);

CREATE TABLE TURMA_MODULO (
	MODULO_ID INT NOT NULL,
	TURMA_ID INT NOT NULL,
    
    PRIMARY KEY(MODULO_ID, TURMA_ID),
    FOREIGN KEY(TURMA_ID) REFERENCES TURMA(ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY(MODULO_ID) REFERENCES MODULO(ID)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE ALUNO (
	ID INT PRIMARY KEY AUTO_INCREMENT,
    USUARIO_ID INT NOT NULL,
    TURMA_ID INT NOT NULL,
    
    FOREIGN KEY(USUARIO_ID) REFERENCES USUARIO(ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY(TURMA_ID) REFERENCES TURMA(ID)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE BOLETIM (
	ALUNO_ID INT NOT NULL,
    MODULO_ID INT NOT NULL,
    NOTA INT NOT NULL,
    
    PRIMARY KEY(ALUNO_ID, MODULO_ID),
    FOREIGN KEY(ALUNO_ID) REFERENCES ALUNO(ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(MODULO_ID) REFERENCES MODULO(ID)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE AULA (
	ID INT PRIMARY KEY AUTO_INCREMENT,
    DESCRICAO TEXT NOT NULL,
    `DATA` DATE NOT NULL, 
    TURMA_ID INT NOT NULL,
    
    FOREIGN KEY(TURMA_ID) REFERENCES TURMA(ID)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE AULA_ALUNO (
	ALUNO_ID INT NOT NULL,
    AULA_ID INT NOT NULL,
    
    PRIMARY KEY(ALUNO_ID, AULA_ID),
    FOREIGN KEY(ALUNO_ID) REFERENCES ALUNO(ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(AULA_ID) REFERENCES AULA(ID)
		ON DELETE CASCADE ON UPDATE CASCADE
);

INSERT INTO ENDERECO(CEP, BAIRRO, LOGRADOURO, NUMERO) VALUES
('59291-631', 'Centro', 'Rua', '379');
INSERT INTO PESSOA(NOME, CPF, RG, DATA_NASCIMENTO, SEXO, ENDERECO_ID) VALUES
('Lucas do Nascimento Ribeiro', '111.111.111-11', '000.000.000', '2000-07-23', 'MASCULINO', 1);
INSERT INTO CONTATO(PESSOA_ID, EMAIL, TELEFONE) VALUES ((SELECT ID FROM PESSOA WHERE CPF = '111.111.111-11'), 'lucasnascimentoribeiro13@gmail.com', '+55 084 9-8852-3780');

SELECT * FROM usuario;

INSERT INTO USUARIO(MATRICULA, SENHA, PESSOA_ID) VALUES ('20161164010023', 'ifrn.2019', (SELECT ID FROM PESSOA WHERE CPF = '111.111.111-11'));
INSERT INTO COORDENADOR(USUARIO_ID) VALUES (2);
INSERT INTO COORDENADOR_GERAL VALUES(2);

select * from coordenador;
select * from coordenador_geral;















